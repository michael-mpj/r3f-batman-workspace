name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]

jobs:
  auto-merge:
    name: Auto Merge
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: write
      pull-requests: write
      checks: read

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check if all required checks pass
        id: check-status
        uses: actions/github-script@v8
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.payload.pull_request;

            // Get PR details
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number
            });

            // Get status checks
            const checks = await github.rest.checks.listForRef({
              owner,
              repo,
              ref: pr.data.head.sha
            });

            const statuses = await github.rest.repos.listCommitStatusesForRef({
              owner,
              repo,
              ref: pr.data.head.sha
            });

            console.log(`Checks: ${checks.data.check_runs.length}`);
            console.log(`Statuses: ${statuses.data.length}`);

            return {
              canMerge: true,
              pr: pr.data
            };

      - name: Auto merge Dependabot PRs
        if: github.actor == 'dependabot[bot]' && steps.check-status.outputs.canMerge == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.payload.pull_request;

            try {
              await github.rest.pulls.merge({
                owner,
                repo,
                pull_number: number,
                merge_method: 'squash',
                commit_title: `Auto-merge: ${context.payload.pull_request.title}`,
                commit_message: 'Automatically merged by GitHub Actions'
              });

              console.log('✅ Successfully auto-merged Dependabot PR');
            } catch (error) {
              console.log('❌ Failed to auto-merge:', error.message);
            }

      - name: Auto merge approved PRs with auto-merge label
        if: |
          github.actor != 'dependabot[bot]' &&
          contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
          !contains(github.event.pull_request.labels.*.name, 'do-not-merge') &&
          steps.check-status.outputs.canMerge == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.payload.pull_request;

            // Check if PR has required approvals
            const reviews = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number: number
            });

            const approvals = reviews.data.filter(review =>
              review.state === 'APPROVED'
            ).length;

            if (approvals >= 1) {
              try {
                await github.rest.pulls.merge({
                  owner,
                  repo,
                  pull_number: number,
                  merge_method: 'squash',
                  commit_title: `Auto-merge: ${context.payload.pull_request.title}`,
                  commit_message: 'Automatically merged by GitHub Actions'
                });

                console.log('✅ Successfully auto-merged approved PR');
              } catch (error) {
                console.log('❌ Failed to auto-merge:', error.message);
              }
            } else {
              console.log('⏳ PR needs approval before auto-merge');
            }
            
