name: Security Audit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security audit every day at 2:00 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: npm-audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=moderate --json > audit-results.json || true

          # Check if there are any vulnerabilities
          if [ -s audit-results.json ]; then
            VULN_COUNT=$(cat audit-results.json | jq -r '.metadata.vulnerabilities.total // 0')
            echo "vulnerabilities=$VULN_COUNT" >> $GITHUB_OUTPUT

            if [ "$VULN_COUNT" -gt 0 ]; then
              echo "Found $VULN_COUNT vulnerabilities"
              cat audit-results.json | jq -r '.auditReportVersion, .vulnerabilities'
              exit 1
            fi
          else
            echo "vulnerabilities=0" >> $GITHUB_OUTPUT
          fi

      - name: Run npm audit fix (dry run)
        if: failure()
        run: |
          echo "Checking if vulnerabilities can be automatically fixed..."
          npm audit fix --dry-run

      - name: Check for security-related dependencies
        run: |
          echo "Checking for known security packages..."
          npm ls --depth=0 | grep -E "(helmet|cors|express-rate-limit|bcrypt|jsonwebtoken)" || echo "No common security packages found"

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json
          retention-days: 30

      - name: Comment PR with audit results
        if: github.event_name == 'pull_request' && steps.npm-audit.outputs.vulnerabilities != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const vulnerabilities = '${{ steps.npm-audit.outputs.vulnerabilities }}';

            const comment = `## üîí Security Audit Results

            ‚ö†Ô∏è **${vulnerabilities} vulnerabilities found**

            Please review the audit results and fix any security issues before merging.

            You can run the following commands locally:
            \`\`\`bash
            npm audit
            npm audit fix
            \`\`\`

            For more details, check the workflow logs and audit artifacts.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-1.0-only, GPL-2.0-only, GPL-3.0-only
          comment-summary-in-pr: true

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          echo "Checking package licenses..."
          npx license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD" --excludePrivatePackages || {
            echo "‚ùå Found packages with incompatible licenses"
            echo "Run 'npx license-checker' to see all licenses"
            exit 1
          }
