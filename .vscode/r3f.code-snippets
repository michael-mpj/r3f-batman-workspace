{
  "React Three Fiber Basic Setup": {
    "prefix": "r3f-setup",
    "body": [
      "import { Canvas } from '@react-three/fiber'",
      "import { OrbitControls } from '@react-three/drei'",
      "",
      "function App() {",
      "  return (",
      "    <Canvas camera={{ position: [3, 3, 3] }}>",
      "      <ambientLight intensity={0.5} />",
      "      <directionalLight position={[10, 10, 5]} intensity={1} />",
      "      <OrbitControls />",
      "      $0",
      "    </Canvas>",
      "  )",
      "}",
      "",
      "export default App",
    ],
    "description": "Basic R3F Canvas setup with lights and controls",
  },
  "Basic Mesh": {
    "prefix": "r3f-mesh",
    "body": [
      "<mesh position={[$1, $2, $3]}>",
      "  <${4:boxGeometry} args={[$5]} />",
      "  <${6:meshStandardMaterial} color=\"${7:#ff6b6b}\" />",
      "</mesh>$0",
    ],
    "description": "Basic mesh with geometry and material",
  },
  "useFrame Hook": {
    "prefix": "r3f-useframe",
    "body": [
      "import { useFrame } from '@react-three/fiber'",
      "import { useRef } from 'react'",
      "",
      "const ${1:meshRef} = useRef()",
      "",
      "useFrame((state, delta) => {",
      "  $2",
      "})",
    ],
    "description": "useFrame hook for animations",
  },
  "Three.js Group": {
    "prefix": "r3f-group",
    "body": ["<group position={[$1, $2, $3]} rotation={[$4, $5, $6]}>", "  $0", "</group>"],
    "description": "Three.js group component",
  },
  "R3F Component with ref": {
    "prefix": "r3f-component",
    "body": [
      "import { useRef } from 'react'",
      "import { useFrame } from '@react-three/fiber'",
      "",
      "function ${1:ComponentName}(props) {",
      "  const ref = useRef()",
      "",
      "  useFrame((state, delta) => {",
      "    // Animation logic here",
      "    $2",
      "  })",
      "",
      "  return (",
      "    <mesh ref={ref} {...props}>",
      "      <${3:boxGeometry} args={[1, 1, 1]} />",
      "      <${4:meshStandardMaterial} color=\"${5:#ff6b6b}\" />",
      "    </mesh>",
      "  )",
      "}",
      "",
      "export default ${1:ComponentName}",
    ],
    "description": "R3F component with ref and useFrame",
  },
  "Drei Text": {
    "prefix": "r3f-text",
    "body": [
      "import { Text } from '@react-three/drei'",
      "",
      "<Text",
      "  position={[$1, $2, $3]}",
      "  fontSize={$4:1}",
      "  color=\"${5:#ffffff}\"",
      "  anchorX=\"center\"",
      "  anchorY=\"middle\"",
      ">",
      "  ${6:Hello World}",
      "</Text>$0",
    ],
    "description": "Drei Text component",
  },
  "Drei Sphere": {
    "prefix": "r3f-sphere",
    "body": [
      "import { Sphere } from '@react-three/drei'",
      "",
      "<Sphere position={[$1, $2, $3]} args={[${4:1}, ${5:32}, ${6:32}]}>",
      "  <meshStandardMaterial color=\"${7:#ff6b6b}\" />",
      "</Sphere>$0",
    ],
    "description": "Drei Sphere component",
  },
  "Drei Box": {
    "prefix": "r3f-box",
    "body": [
      "import { Box } from '@react-three/drei'",
      "",
      "<Box position={[$1, $2, $3]} args={[${4:1}, ${5:1}, ${6:1}]}>",
      "  <meshStandardMaterial color=\"${7:#ff6b6b}\" />",
      "</Box>$0",
    ],
    "description": "Drei Box component",
  },
  "useGLTF Hook": {
    "prefix": "r3f-gltf",
    "body": [
      "import { useGLTF } from '@react-three/drei'",
      "",
      "function ${1:Model}(props) {",
      "  const { nodes, materials } = useGLTF('${2:/path/to/model.gltf}')",
      "  ",
      "  return (",
      "    <group {...props} dispose={null}>",
      "      $0",
      "    </group>",
      "  )",
      "}",
      "",
      "useGLTF.preload('${2:/path/to/model.gltf}')",
    ],
    "description": "useGLTF hook for loading 3D models",
  },
  "useTexture Hook": {
    "prefix": "r3f-texture",
    "body": [
      "import { useTexture } from '@react-three/drei'",
      "",
      "const ${1:texture} = useTexture('${2:/path/to/texture.jpg}')",
      "",
      "<meshStandardMaterial map={${1:texture}} />$0",
    ],
    "description": "useTexture hook for loading textures",
  },
  "R3F Postprocessing": {
    "prefix": "r3f-postprocess",
    "body": [
      "import { EffectComposer, Bloom, ChromaticAberration } from '@react-three/postprocessing'",
      "",
      "<EffectComposer>",
      "  <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />",
      "  <ChromaticAberration offset={[0.002, 0.002]} />",
      "</EffectComposer>$0",
    ],
    "description": "R3F postprocessing effects",
  },
  "Leva Controls": {
    "prefix": "r3f-leva",
    "body": [
      "import { useControls } from 'leva'",
      "",
      "const { ${1:color}, ${2:position} } = useControls({",
      "  ${1:color}: '${3:#ff6b6b}',",
      "  ${2:position}: { value: [${4:0}, ${5:0}, ${6:0}], step: 0.1 }",
      "})$0",
    ],
    "description": "Leva controls for R3F",
  },
}
